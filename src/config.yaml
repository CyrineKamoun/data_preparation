# VARIABLES_SET 
VARIABLES_SET : 
  # variables for Pyrosm collector
  # region to download - could be "Bayern"
  region_pbf : ["Mittelfranken","Niederbayern","Oberbayern","Oberfranken","Oberpfalz","Schwaben","Unterfranken"]

  landuse:
    collection:
        # add all tags in a list associated to their osm feature that should be collected from geofabrik 
        # if you are not sure add feature not_sure: ["tag1", "tag2"] then a dict with all tags (value) and their assosicated feature (key) and one key 
        # -> use e.g. terminal and activate your env -> change directory to src (run: cd src) 
        # -> and run: python -c "from collection import classify_osm_tags;classify_osm_tags('landuse')" for e.g. landuse
        # "not a valid osm tag/ missing in our list" with values that where not found will be returned and the collection breaks
        # -> if you need a certain tag add it manually to osm_featutre_tags_dict.py
        # PyrOSM recommends to use True instead of the tags list if you want all entries of the specific feature, but their backend dict is incomplete and has 
        # typos -> not use it -> build own solution add "all"
        # a list of the most used tags and their associated feature can be seen in osm_feature_tags_dict.py or https://wiki.openstreetmap.org/wiki/Map_features,
        # https://taginfo.openstreetmap.org/keys/tourism#values  
        # the resulting dataformat e.g. pandas geodataframe will have a column for every feature and one for every entry in additional_columns (should be OSM
        # features as well)

      osm_tags:
        landuse: ["basin", "reservoir", "salt_pond", "water", "waters", "allotments", "aquaculture", "farmland", "farmyard", "greenhouse_horticulture",  
                  "plant_nursery", "vineyard", "forest", "grass", "meadow", "village_green", "recreation_ground", "cemetery", "residential", "garages",
                  "commercial", "retail", "religious", "industrial", "landfill", "quarry", "railway", "highway", "military", "garden", "national_park", 
                  "nature_reserve", "park", "grave_yard", "orchard", "fallow", "plantation"] 
        amenity: ["parking", "school", "hospital"]
        leisure: ["adult_gaming_centre", "amusement_arcade", "beach_resort", "bandstand", "dance", "dog_park", "escape_game", "fitness_centre",
                  "garden", "horse_riding", "marina", "miniature_golf", "nature_reserve", "park", "pitch", "playground", "sports_centre", "stadium",
                  "swimming_pool", "track", "water_park", "leisure"]
        natural: ["water", "scrub", "wood", "wetland", "grassland", "heath"]

      additional_columns: ["tourism", "name"]

          # define which geometry types should be collected from OSM (do not turn off lines -> not all data will be collected)
      points    : False
      polygons  : True
      lines     : True

    preparation:
        # put all osm_tags from the collection into a category of landuse_simplified as well -> new column landuse_simplified with grouped tags
      landuse_simplified : 
        water          : ["basin","reservoir","salt_pond","waters", "swimming_pool"]
        agriculture    : ["allotments", "aquaculture", "fallow", "farmland", "farmyard", "greenhouse_horticulture", "orchard", "pasture", "plant_nursery", 
                          "plantation", "vineyard"]
        nature         : ["forest","grass","meadow","green_area", "wetland", "scrub", "wood", "grassland", "heath"]
        leisure        : ["adult_gaming_centre", "amusement_arcade", "beach_resort", "bandstand", "dance", "dog_park", "escape_game", "fitness_centre", 
                          "garden", "horse_riding", "marina", "miniature_golf", "nature_reserve", "park", "pitch", "playground", "sports_centre", "stadium",  
                          "track", "water_park", "national_park", "village_green", "recreation_ground"]
        cemetery       : ["grave_yard"]
        residential    : ["garages"]
        commercial     : ["retail"]
        community      : ["school","university","hospital","college","churchyard","religious"]
        industrial     : ["landfill","quarry"]
        transportation : ["highway","parking","railway", "parking"]
        military       : []

    fusion: 
  
  pois: 
    collection:
      osm_tags:
        amenity : ["fuel", "post_office", "taxi", "atm", "bank", "dentist", "doctors", "pharmacy", "post_box", "marketplace", "bar", "biergarten", "cafe", 
                   "pub", "fast_food", "ice_cream", "restaurant", "theatre", "cinema", "library", "nightclub", "recycling", "car_sharing", "bicycle_rental", 
                   "charging_station", "bus_station", "bench"]
        shop    : ["clothes", "convenience", "general", "fashion", "fuel", "bakery", "butcher", "florist", "greengrocer", "kiosk", "mall", "shoes", "sports", 
                   "supermarket", "hairdresser", "health_food", "chemist", "ice_cream"]
        tourism : ["hotel", "museum", "hostel", "guest_house", "viewpoint", "gallery"]
        railway : ["station", "platform", "stop", "tram_stop", "subway_entrance"]
        leisure : ["playground", "fitness_station", "water_park", "pitch", "sports_centre", 'sports_hall', "fitness_centre"]
        sport   : ["yoga", "fitness"]

      additional_columns: ["name", "brand", "addr:street","addr:housenumber", "addr:postcode", "addr:city", "addr:country", "phone", "website", 
                           "opening_hours", "operator", "origin", "organic", "public_transport", "subway"]
      points    : True
      polygons  : True
      lines     : True
      
    preparation:
      bank: 
        sparkasse       : ["kreissparkasse", "sparkasse", "stadtsparkasse"]
        raiffeisenbank  : ["raiffeisenbank", "vr bank", "vr-bank", "volksbank", "volks", "münchner"]
        hypovereinsbank : ["hypo vereinsbank", "hypovereinsbank"]
        commerzbank : ["commerzbank"]

      chemist: 
        dm       : ["dm"]
        rossmann : ["rossmann"]
        müller   : ["müller", "mueller"] 
  
      nursery : ["krippe", "kinderkrippe", "kita"]

      fast_food: 
        mcdonalds : ["mcdonald"]
      
      organic :
        denn's Biomarkt : ["denn's", "denns", "denn"]
        alnatura : ["alnatura"]
  
      health_food: 
        vitalia   : ["vitalia"]
        reformhaus : ["reformhaus"]

      hypermarket: 
        hit       : ["hit"]
        real      : ["real"]
        v-markt   : ["v-markt"]
        kaufland  : ["kaufland"]
        marktkauf : ["marktkauf"]
  
      supermarket: 
        rewe  : ["rewe", "rewe city"]
        edeka : ["e center", "edeka", "e-", "e express", "e xpress", "e aktiv", "e kauf", "nah und gut", "nah & gut", "cap markt",
                 "cap-markt", "diska", "beckesepp", "elli", "frischemarkt ", "frischmarkt ", "inkoop", "kiezmarkt", "marktkauf", "simmel",
                 "scheck-in"] # a lot of questions z.B."NP"
        tegut : ["tegut"]
     
      discount_gym: 
        fitx           : ["fitx"]
        mcfit          : ["mcfit"]
        fitstar        : ["fitstar","fit-star", "fit star"]
        cleverfit      : ["cleverfit" ,"clever fit"]
        jumpersfitness : ["jumpersfitness" ,"jumpers fitness"]
  
      discount_supermarket: 
        aldi  : ["aldi"]
        lidl  : ["lidl"]
        netto : ["netto"]
        norma : ["norma"]
        penny : ["penny"]
    
      no_end_consumer_store: 
        metro     : ["metro"]
        hamberger : ["hamberger"]
    
      community_sport_centre: ["bezirkssportanlage"]

      operators_bicycle_rental: ["münchner verkehrs gesellschaft", "münchner verkehrsgesellschaft", "mvg"]
    
      sport:
        sport_var_disc   : ["table_tennis"]
        leisure_var_add  : ["sports_hall", "fitness_center", "sport_center", "track", "pitch"]
        leisure_var_disc : ["fitness_station"]
      
      schools:
        schule: ['Grundschule','Gymnasium','Realschule','Werkrealschule']
        grundschule: ['Grund- und Teilhauptschule','Grund- und Hauptschule','Grund- und Mittelschule']
        hauptschule_mittelschule : ['Grund- und Teilhauptschule','Grund- und Hauptschule','Hauptschule','Mittelschule','Grund- und Mittelschule']
        exclude: ['privat','priv.','montessori','waldorf']

    fusion:
      table_base  : "pois_bayern"
      rs_set      : ["091620000000","095640000000","097610000000","093620000000","091610000000","096630000000","095630000000","095620000000","094610000000",
                     "094620000000","092610000000","096610000000","097630000000","091630000000","096620000000","092620000000","091780124124","092630000000",
                     "091740115115","094640000000","097620000000","097640000000","093630000000","093610000000","095610000000","094630000000","095650000000",
                     "091790123123","091790121121","094740126126","091840149149","091790142142","095740138138","091860143143","095730134134","095760143143",
                     "091840148148","091880139139","091750132132","095720132132","091740126126","091840136136","091790145145","091840123123","091880120120",
                     "091780145145"]
      fusion_data :
        source:
          geonode:
            doctors_bavaria:
              fusion_type : "replace" 
              amenity : "doctors"
              amenity_set : False
              amenity_brand : 
              columns2rename : {"category": "amenity", "extras": "tags", "spider": "source"}
              columns2drop : ["id", "ref", "layer", "path"]
              column_set_value : 
              columns2fuse : 
          geojson:
            dm:
              fusion_type : "fuse"
              amenity :
              amenity_set : False
              amenity_brand : ("chemist","dm")
              columns2rename : 
              columns2drop : ["ref","id"]
              column_set_value : {"brand" : "dm-drogerie markt", "source" : "dm_de"} # for all values
              columns2fuse : ["opening_hours", "phone", "addr:street", "housenumber" ,"addr:city", "addr:postcode", "addr:country", "brand"]
            mueller:
              fusion_type : "fuse"
              amenity :
              amenity_set : False 
              amenity_brand : ("chemist","Müller")
              columns2rename : 
              columns2drop : ["ref","id", "@spider"]
              column_set_value : {"brand" : "Müller", "source": "mueller_de"} # for all values in osm related to brand
              columns2fuse : ["opening_hours", "addr:street", "housenumber", "addr:city", "addr:postcode", "addr:country", "name", "brand"]
            apotheken_de:
              fusion_type : "replace"
              amenity : "pharmacy"
              amenity_set : True
              amenity_brand : 
              columns2rename : {"@spider" : "source"}
              columns2drop : ["ref","id", "fax"]
              column_set_value : 
              columns2fuse :
            denns_de:
              fusion_type : "fuse"
              amenity : "organic"
              amenity_set : False
              amenity_brand : 
              columns2rename : {"@spider" : "source"}
              columns2drop : ["ref","id"]
              column_set_value : {"operator": "denn's biomarkt"} # for all values in osm related to brand
              columns2fuse : ["opening_hours", "addr:street", "housenumber", "addr:city", "addr:postcode", "addr:country", "phone","operator"] # no name column for denn's data   
            alnatura_de:
              fusion_type : "fuse"
              amenity : 
              amenity_set : False
              amenity_brand : ("organic","Alnatura")
              columns2rename : {"@spider" : "source"}
              columns2drop : ["ref","id"]
              column_set_value : {"brand": "Alnatura"} # for all values in osm related to brand
              columns2fuse : ["opening_hours", "addr:street", "housenumber", "addr:city", "addr:postcode", "addr:country", "name", "phone", "brand"]
            commerzbank_de:
              fusion_type : "fuse"
              amenity : 
              amenity_set : False
              amenity_brand : ("bank","Commerzbank") # issues with brand - operator
              columns2rename : {"@spider" : "source"}
              columns2drop : ["ref","id", "fax", "email","barriere_type", "cash_register", "vault", "cashback", "cashgroup"]
              column_set_value : {"brand": "Commerzbank"} # for all values in osm related to brand
              columns2fuse : ["opening_hours", "addr:street", "housenumber", "addr:city", "addr:postcode", "addr:country", "name", "phone", "brand"]
            kaufland:
              fusion_type : "fuse"
              amenity : 
              amenity_set : False
              amenity_brand : ("hypermarket","Kaufland")
              columns2rename : {"@spider" : "source"}
              columns2drop : ["ref","id","brand:wikidata"]
              column_set_value : {"brand": "Kaufland"} # for all values in osm related to brand
              columns2fuse : ["opening_hours", "addr:street", "housenumber", "addr:city", "addr:postcode", "addr:country", "name", "phone", "website", "brand"]
            lidl:
              fusion_type : "fuse"
              amenity : 
              amenity_set : False
              amenity_brand : ("discount_supermarket","Lidl")
              columns2rename : {"@spider" : "source"}
              columns2drop : ["ref","id", "brand:wikidata"]
              column_set_value : {"brand": "Lidl"} # for all values in osm related to brand
              columns2fuse : ["opening_hours", "addr:street", "housenumber", "addr:city", "addr:postcode", "addr:country", "name", "brand"]
            norma_de:
              fusion_type : "fuse"
              amenity : 
              amenity_set : False
              amenity_brand : ("discount_supermarket","Norma")
              columns2rename : {"@spider" : "source"}
              columns2drop : ["ref","id"]
              column_set_value : {"brand": "Norma"} # for all values in osm related to brand
              columns2fuse : ["opening_hours", "addr:street", "housenumber", "addr:city", "addr:postcode", "addr:country", "brand"]
            penny:
              fusion_type : "fuse"
              amenity : 
              amenity_set : False
              amenity_brand : ("discount_supermarket","Penny")
              columns2rename : {"@spider" : "source"}
              columns2drop : ["ref","id", "brand:wikidata"]
              column_set_value : {"brand": "Penny"} # for all values in osm related to brand
              columns2fuse : ["addr:street", "addr:city", "addr:postcode", "addr:country", "name", "brand"]
            deutschepost_filiale:
              fusion_type : "replace"
              amenity : "post_office"
              amenity_set : True
              amenity_brand :
              columns2rename : {"@spider" : "source"}
              columns2drop : ["ref", "id", "addr:district", "locationType"]
              column_set_value : {"brand": "Deutschepost"} # for all values in osm related to brand
              columns2fuse : ["addr:street", "housenumber", "addr:city", "addr:postcode", "addr:country", "opening_hours"]
            deutschepost_paketshop:
              fusion_type : "replace"
              amenity : "post_paketshop"
              amenity_set : True
              amenity_brand :
              columns2rename : {"@spider" : "source"}
              columns2drop : ["ref","id", "addr:district", "locationType"]
              column_set_value : # for all values in osm related to brand
              columns2fuse : ["addr:street", "housenumber", "addr:city", "addr:postcode", "addr:country", "opening_hours"]
            jedeschule_geocode:
              fusion_type : "replace"
              amenity : "school"
              amenity_set : False
              amenity_brand :
              columns2rename : 
              columns2drop : ["index", "id_2", "id_1", "id_0", "fid", "address", "fax", "full_time_", "id", "lat", "lon", "official_i", "school_typ", "school_t_1", "state"]
              column_set_value : {"source": "jedeschule"} # for all values in osm related to brand
              columns2fuse : 
            vitalia:
              fusion_type : "fuse"
              amenity : 
              amenity_set : False
              amenity_brand : ("health_food", "Vitalia")
              columns2rename : {"@spider" : "source"}
              columns2drop : ["ref", "id", "email", "website", "category"]
              column_set_value : {"brand": "Vitalia"} # for all values in osm related to brand
              columns2fuse : ["opening_hours", "phone", "addr:street", "housenumber" ,"addr:city", "addr:postcode", "addr:country", "brand"]
            tegut:
              fusion_type : "fuse"
              amenity : 
              amenity_set : False
              amenity_brand : ("supermarket", "tegut")
              columns2rename : {"@spider" : "source"}
              columns2drop : ["ref", "id", "url"]
              column_set_value : {"brand": "Tegut"} # for all values in osm related to brand
              columns2fuse : ["phone", "addr:street", "housenumber" ,"addr:city", "addr:postcode", "addr:country", "brand"]


  # Following config set treat the bug issue
  # Bug behavior "highway" -> "bus_stop"!!!!!!!!!!!!!!!!!!!!!!!!!! 
  bus_stops :
    collection:
      osm_tags: 
        highway          : ["bus_stop"]
        public_transport : ["stop_position", "station"]

      additional_columns : ["name", "brand", "addr:street","addr:housenumber", "addr:postcode", "addr:city", "addr:country", "phone", "website", 
                           "opening_hours", "operator", "origin", "organic", "subway"]
      points   : True
      polygons : True
      lines    : True
    preparation:
    fusion:

  buildings :
    collection:
      osm_tags: 
        buildings: ["all"]

      addtional_columns: []
      points: True
      polygons: True
      lines: True
    preparation:
    fusion: